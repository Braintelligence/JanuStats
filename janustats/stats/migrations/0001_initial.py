# Generated by Django 2.0.8 on 2018-08-28 12:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StatValueTimeSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name des statistischen Datums, maximal 100 Zeichen.', max_length=100)),
                ('value', models.DecimalField(decimal_places=18, help_text='Wert des statistischen Datums, maximal 36 Ziffern mit maximal 18 Dezimalstellen.', max_digits=36)),
                ('seasonally_adjusted', models.BooleanField(help_text='Angabe, ob das statistische Datum saisonbereinigt ist.')),
                ('real_or_nominal', models.BooleanField(help_text='0/False bedeutet nominal, 1/True bedeutet real, Null bedeutet weder noch.')),
                ('vintage', models.CharField(blank=True, help_text='Vintage des Datums, maximal 100 Zeichen.', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Veröffentlichungsjahr des Datums, erlaubt: (1000-9999).', validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(9999)])),
                ('quarter', models.IntegerField(blank=True, help_text='Veröffentlichungsquartal des Datums, erlaubt: (1-4).', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
            ],
        ),
        migrations.AddField(
            model_name='statvaluetimeseries',
            name='statobject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stats.TimeSeries'),
        ),
    ]
